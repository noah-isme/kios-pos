name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/pnpm
            ~/.pnpm-store
            .pnpm-store
            node_modules/.pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm run db:generate

      - name: Approve pnpm build scripts
        run: pnpm approve-builds || true

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h 127.0.0.1 -p 5432 && break || sleep 1
          done

      - name: Run database migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/testdb
        run: pnpm run db:push

      - name: Run lint
        run: pnpm run lint

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/testdb
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: pnpm run test:unit

      - name: Build
        run: pnpm run build

      - name: Install Playwright browsers
        # Install browsers required by Playwright so CI won't fail with missing executables
        run: pnpm exec playwright install --with-deps

      - name: Run E2E tests (Playwright)
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/testdb
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: pnpm exec playwright test --project=chromium --reporter=list
